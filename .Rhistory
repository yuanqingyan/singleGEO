library(Seurat)
install.packages("Seurat")
install.packages("igraph")
install.packages("Seurat")
install.packages("Seurat")
install.packages("igraph")
install.packages("igraph")
install.packages("igraph")
install.packages("igraph")
getwd()
library(igraph)
Sys.getenv('R_HOME')
library(igraph)
library(igraph)
library(igraph)
getwd()
library(Matrix)
library(igraph)
library(devtools)
library(igraph)
library(igraph)
library(igraph)
system2(command = "echo", args = "$PATH")
.libpaths()
library(igraph)
install.packages("igraph")
install.packages("devtools")
library(devtools)
install.packages("igraph")
devtools::install_github("igraph/rigraph")
install.packages("igraph")
install.packages("rgdal")
install.packages("igraph")
library(devtools)
library(devtools)
library(devtools)
library(igraph)
install.packages("devtools")
library(devtools)
install.packages("Seurat")
library(Seurat)
install.packages("BiocManager")
BiocManager::install("GEOquery")
BiocManager::install("GEOmetadb")
install.packages("rmarkdown")
library(ggplot2)
library(sctransform)
library(knitr)
library(RSQLite)
library(R.utils)
library(SeuratObject)
library(Matrix)
library(Matrix)
install.packages("Matrix")
install.packages("Matrix")
library(Matrix)
devtools::install_github("rstudio/reticulate")
library(reticulate)
reticulate::use_python("/opt/homebrew/anaconda3/bin/python",required=T)
reticulate::py_config()
library(devtools)
install_github("yuanqingyan/singleGEO")
install_github
2022-1964
os <- list(pos1=seq(1,1000,35),
pos2=seq(2001,3000,35),
pos3=seq(1,1000,50))
chr <- rep(paste0("chr",c(1,1,2)), times = sapply(pos,length))
pos <- unlist(pos, use.names=FALSE)
pos <- list(pos1=seq(1,1000,35),
pos2=seq(2001,3000,35),
pos3=seq(1,1000,50))
chr <- rep(paste0("chr",c(1,1,2)), times = sapply(pos,length))
pos <- unlist(pos, use.names=FALSE)
pos
pos <- list(pos1=seq(1,1000,35),
pos2=seq(2001,3000,35),
pos3=seq(1,1000,50))
pos
chr
pos <- unlist(pos, use.names=FALSE)
pos
install.packages("bumphunter")
BiocManager::install("bumphunter")
(cl <- clusterMaker(chr, pos, maxGap = 300))
library(bumphunter)
(cl <- clusterMaker(chr, pos, maxGap = 300))
table(cl)
ind <- which(chr=="chr1")
plot(pos[ind], rep(1,length(ind)), col=cl[ind],
xlab="locations", ylab="")
Indexes <- split(seq_along(cl), cl)
Indexes
beta1 <- rep(0, length(pos))
for(i in seq(along=Indexes)){
ind <- Indexes[[i]]
x <- pos[ind]
z <- scale(x, median(x), max(x)/12)
beta1[ind] <- i*(-1)^(i1)*pmax(1-abs(z)^3,0)^3 ##multiply by i to vary size
}
beta1[ind] <- i*(-1)^(i+1)*pmax(1-abs(z)^3,0)^3 ##multiply by i to vary size
beta1 <- rep(0, length(pos))
for(i in seq(along=Indexes)){
ind <- Indexes[[i]]
x <- pos[ind]
z <- scale(x, median(x), max(x)/12)
beta1[ind] <- i*(-1)^(i+1)*pmax(1-abs(z)^3,0)^3 ##multiply by i to vary size
}
beta1
segs <- getSegments(beta1, cl, cutoff=0.05)
segs
beta1
cl
par(mfrow=c(1,2))
for(ind in segs$upIndex){
index <- which(cl==cl[ind[1]])
plot(pos[index], beta1[index],
xlab=paste("position on", chr[ind[1]]),
ylab="beta1")
points(pos[ind], beta1[ind], pch=16, col=2)
abline(h = 0.05, col = "blue")
}
tab <- regionFinder(beta1, chr, pos, cl, cutoff=0.05)
tab
help(regionFinder)
help(getSegments)
library(bumphunter)
pos <- list(pos1=seq(1,1000,35),
pos2=seq(2001,3000,35),
pos3=seq(1,1000,50))
chr <- rep(paste0("chr",c(1,1,2)), times = sapply(pos,length))
pos <- unlist(pos, use.names=FALSE)
(cl <- clusterMaker(chr, pos, maxGap = 300))
table(cl)
ind <- which(chr=="chr1")
Indexes <- split(seq_along(cl), cl)
beta1 <- rep(0, length(pos))
for(i in seq(along=Indexes)){
ind <- Indexes[[i]]
x <- pos[ind]
z <- scale(x, median(x), max(x)/12)
beta1[ind] <- i*(-1)^(i+1)*pmax(1-abs(z)^3,0)^3 ##multiply by i to vary size
}
segs <- getSegments(beta1, cl, cutoff=0.05)
regionFinder(beta1, chr, pos, cl, cutoff=0.05)
tab <- regionFinder(beta1, chr, pos, cl, cutoff=0.05)
tab
library(rtracklayer)
library(plyranges)
BiocManager::install("plyranges")
library(plyranges)
df <- data.frame(start = 1:10, width = 5)
df
rng <- as_iranges(df)
rng
rng_by_start <- anchor_start(rng)
rng_by_start
anchor(rng_by_start)
mutate(rng_by_start, width = 3L)
grng <- as_granges(df,
seqnames = "chr1",
strand = c(rep("-", 5), rep("+", 5)))
grng
rng_by_5p <- anchor_5p(grng)
rng_by_5p
mutate(rng_by_5p, width = 3L)
library(Seurat)
library(SeuratData)
af<-function(c=3,d=4){
c+d
}
bf<-function(e=9,f=3){
f-e
}
test<-function(a=af,b=bf,...){
dots<-list(...)
ndots<-length(dots)
}
af<-function(c=3,d=4){
c+d
}
bf<-function(e=9,f=3){
f-e
}
test<-function(a=a,b=b,...){
dots<-list(...)
ndots<-length(dots)
print(ndots)
out<-af(c=a,d=b)*bf(e=b,f=a)
return(out)
}
test(a=2,b=9)
test(a=2,b=9,f=3,g=2)
test<-function(a=a,b=b,...){
dots<-list(...)
print(dots)
ndots<-length(dots)
print(ndots)
out<-af(c=a,d=b)*bf(e=b,f=a)
return(out)
}
test(a=2,b=9,f=3,g=2)
test<-function(a=a,b=b,...){
dots<-list(...)
print(names(dots))
print(dots)
ndots<-length(dots)
print(ndots)
out<-af(c=a,d=b)*bf(e=b,f=a)
return(out)
}
test(a=2,b=9,f=3,g=2)
test(a=2,b=9,f=3,g=2,m@abc.e=5)
test(a=2,b=9,f=3,g=2,m.abc.e=5)
test(a=2,b=9,f=3,g=2,m_____abc.e=5)
test(a=2,b=9,f=3,g=2,regionFinder_____abc.e=5)
test<-function(a=a,b=b,...){
dots<-list(...)
nameDot=names(dots)
nameDot1<-sapply(strsplit(nameDot,split="\\____"),function(x) x[1])
nameDot2<-sapply(strsplit(nameDot,split="\\____"),function(x) x[2])
print(nameDot1)
print(nameDot2)
print(dots)
ndots<-length(dots)
print(ndots)
out<-af(c=a,d=b)*bf(e=b,f=a)
return(out)
}
test(a=2,b=9,f=3,g=2,regionFinder_____abc.e=5)
test<-function(a=a,b=b,...){
dots<-list(...)
nameDot=names(dots)
nameDot1<-sapply(strsplit(nameDot,split="\\_____"),function(x) x[1])
nameDot2<-sapply(strsplit(nameDot,split="\\_____"),function(x) x[2])
print(nameDot1)
print(nameDot2)
print(dots)
ndots<-length(dots)
print(ndots)
out<-af(c=a,d=b)*bf(e=b,f=a)
return(out)
}
test(a=2,b=9,f=3,g=2,regionFinder_____abc.e=5)
devtools::install_github("yuanqingyan/singleGEO")
library(singleGEO)
library(sctransform)
install.packages("sctransform")
install.packages("sctransform")
library(singleGEO)
help(SeuObj_integration)
SeuObj_integration
setwd("~/Desktop/Projects/github/singleGEO")
